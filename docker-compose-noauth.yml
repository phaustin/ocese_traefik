version: '3'

services:
  traefik:
    environment:
      - DO_AUTH_TOKEN
    image: "traefik:v2.5"
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik_net
    labels:
      - traefik.enable=true
      #___ set traefik dashboard + API. The API is available at: mydomain.club/api/http/routers
      - "traefik.http.routers.traefik.rule=Host(`phaustin.org`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))"
      - "traefik.http.routers.traefik.service=api@internal"
      #___ set TLS (https)
      - "traefik.http.routers.traefik.tls=true"  
      - "traefik.http.routers.traefik.entrypoints=websecure"
      #___ specific middleware for traefik (it enables the dashboard at mydomain.com/traefik)
      - "traefik.http.routers.traefik.middlewares=traefik-strip,dashboardAuth@file" 
      - "traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/traefik/config:/etc/traefik
    container_name: traefik
    restart: always

  whoami:
    image: "containous/whoami"
    networks:
      - traefik_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`phaustin.org`) && PathPrefix(`/whoami1`)
      - traefik.http.routers.whoami.tls=true
      - traefik.http.routers.whoami.tls.certresolver=lets-encrypt
      - traefik.http.routers.whoami.service=whoami
      - traefik.http.services.whoami.loadbalancer.server.port=80
    container_name: whoami


  whoami2:
    image: "containous/whoami"
    networks:
      - traefik_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami2.rule=Host(`phaustin.org`) && PathPrefix(`/whoami2`)
      - traefik.http.routers.whoami2.tls=true
      - traefik.http.routers.whoami2.tls.certresolver=lets-encrypt
      - traefik.http.routers.whoami2.service=whoami2
      - traefik.http.services.whoami2.loadbalancer.server.port=80
    container_name: whoami2


networks:
    traefik_net:
      driver: bridge
      name: traefik_net

