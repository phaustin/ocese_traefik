version: '3.7'

services:
  traefik:
    environment:
      - DO_AUTH_TOKEN
    image: "traefik:v2.5"
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/traefik/config:/etc/traefik
    container_name: traefik
    restart: always

  whoami:
    image: "containous/whoami"    
    networks:
      - traefik_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`web.eoastestb.xyz`)
      - traefik.http.routers.whoami.tls=true
      - traefik.http.routers.whoami.tls.certresolver=lets-encrypt
      - traefik.http.routers.whoami.service=whoami
      - traefik.http.services.whoami.loadbalancer.server.port=80
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"
    container_name: whoami

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    environment:
      - PROVIDERS_GOOGLE_CLIENT_ID
      - PROVIDERS_GOOGLE_CLIENT_SECRET
      - WHITELIST
      - SECRET
      - INSECURE_COOKIE=false # Example assumes no https, do not use in production
    labels:
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
      - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"
      - traefik.enable=true
    container_name: ansible_forward_google
    networks:
      - traefik_net


networks:
    traefik_net:
      driver: bridge
      name: traefik_net

